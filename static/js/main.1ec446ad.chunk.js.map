{"version":3,"sources":["Api/Rates.ts","Api/CurrencyCodes.ts","store/index.ts","components/Navigation/index.tsx","components/Navigation/Navigation.tsx","components/WrongPage/index.tsx","components/WrongPage/WrongPage.tsx","components/Converter/index.tsx","components/Converter/Converter.tsx","App.tsx","Api/Location.ts","index.tsx"],"names":["GET_RATES_BASE_URL","API_KEY","getExchangeRates","userCurrency","console","log","fetch","then","responce","json","getCurrencyCode","userCountry","codes","getExchangeRatesForTwo","currencyFrom","currencyTo","BD","BE","BF","BG","BA","BB","WF","BL","BM","BN","BO","BH","BI","BJ","BT","JM","BV","BW","WS","BQ","BR","BS","JE","BY","BZ","RU","RW","RS","TL","RE","TM","TJ","RO","TK","GW","GU","GT","GS","GR","GQ","GP","JP","GY","GG","GF","GE","GD","GB","GA","SV","GN","GM","GL","GI","GH","OM","TN","JO","HR","HT","HU","HK","HN","HM","VE","PR","PS","PW","PT","SJ","PY","IQ","PA","PF","PG","PE","PK","PH","PN","PL","PM","ZM","EH","EE","EG","ZA","EC","IT","VN","SB","ET","SO","ZW","SA","ES","ER","ME","MD","MG","MF","MA","MC","UZ","MM","ML","MO","MN","MH","MK","MU","MT","MW","MV","MQ","MP","MS","MR","IM","UG","TZ","MY","MX","IL","FR","IO","SH","FI","FJ","FK","FM","FO","NI","NL","NO","NA","VU","NC","NE","NF","NG","NZ","NP","NR","NU","CK","XK","CI","CH","CO","CN","CM","CL","CC","CA","CG","CF","CD","CZ","CY","CX","CR","CW","CV","CU","SZ","SY","SX","KG","KE","SS","SR","KI","KH","KN","KM","ST","SK","KR","SI","KP","KW","SN","SM","SL","SC","KZ","KY","SG","SE","SD","DO","DM","DJ","DK","VG","DE","YE","DZ","US","UY","YT","UM","LB","LC","LA","TV","TW","TT","TR","LK","LI","LV","TO","LT","LU","LR","LS","TH","TF","TG","TD","TC","LY","VA","VC","AE","AD","AG","AF","AI","VI","IS","IR","AM","AL","AO","AS","AR","AU","AT","AW","IN","AX","AZ","IE","ID","UA","QA","MZ","SET_USER_CURRENCY","SET_EXCHANGE_INFO","SET_EXCHANGE_RATES","SET_EXCHANGE_RATE","initialState","userCurrencyCode","moneyAmount","exchangeFrom","exchangeTo","exchangeRates","exchangeRate","store","createStore","state","action","type","payload","composeWithDevTools","Navigation","className","to","isActive","WrongPage","Converter","useState","userReq","setUserReq","inputError","setInputError","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","info","split","test","toUpperCase","a","rateForTwo","result","conversion_rate","getRates","htmlFor","id","value","onChange","target","changeAmount","Math","round","message","getExchangeRateMessage","LazyExchange","lazy","App","useEffect","locationInfo","userCountryCode","countryCode","path","element","fallback","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ec446ad.chunk.js","sourcesContent":["import { codes } from './CurrencyCodes';\n\nconst GET_RATES_BASE_URL = 'https://v6.exchangerate-api.com/v6/';\nconst API_KEY = '95b20943d764a3594a574bb0';\n\nexport const getExchangeRates = (userCurrency: string): Promise<Rates> => {\n  // eslint-disable-next-line no-console\n  console.log('req to rates server'); // убедимся, что нет лишних запросов\n\n  return fetch(`${GET_RATES_BASE_URL}${API_KEY}/latest/${userCurrency}`)\n    .then(responce => responce.json());\n};\n\nexport const getCurrencyCode = (userCountry: string) => {\n  return codes[userCountry as keyof typeof codes];\n};\n\nexport const getExchangeRatesForTwo = (\n  currencyFrom: string,\n  currencyTo: string,\n): Promise<TwoRates> => {\n  // eslint-disable-next-line no-console\n  console.log('req to rates server'); // убедимся, что нет лишних запросов\n\n  return fetch(`${GET_RATES_BASE_URL}${API_KEY}/pair/${currencyFrom}/${currencyTo}`)\n    .then(responce => responce.json());\n};\n","export const codes = {\n  BD: 'BDT', BE: 'EUR', BF: 'XOF', BG: 'BGN', BA: 'BAM', BB: 'BBD', WF: 'XPF', BL: 'EUR', BM: 'BMD', BN: 'BND', BO: 'BOB', BH: 'BHD', BI: 'BIF', BJ: 'XOF', BT: 'BTN', JM: 'JMD', BV: 'NOK', BW: 'BWP', WS: 'WST', BQ: 'USD', BR: 'BRL', BS: 'BSD', JE: 'GBP', BY: 'BYR', BZ: 'BZD', RU: 'RUB', RW: 'RWF', RS: 'RSD', TL: 'USD', RE: 'EUR', TM: 'TMT', TJ: 'TJS', RO: 'RON', TK: 'NZD', GW: 'XOF', GU: 'USD', GT: 'GTQ', GS: 'GBP', GR: 'EUR', GQ: 'XAF', GP: 'EUR', JP: 'JPY', GY: 'GYD', GG: 'GBP', GF: 'EUR', GE: 'GEL', GD: 'XCD', GB: 'GBP', GA: 'XAF', SV: 'USD', GN: 'GNF', GM: 'GMD', GL: 'DKK', GI: 'GIP', GH: 'GHS', OM: 'OMR', TN: 'TND', JO: 'JOD', HR: 'HRK', HT: 'HTG', HU: 'HUF', HK: 'HKD', HN: 'HNL', HM: 'AUD', VE: 'VEF', PR: 'USD', PS: 'ILS', PW: 'USD', PT: 'EUR', SJ: 'NOK', PY: 'PYG', IQ: 'IQD', PA: 'PAB', PF: 'XPF', PG: 'PGK', PE: 'PEN', PK: 'PKR', PH: 'PHP', PN: 'NZD', PL: 'PLN', PM: 'EUR', ZM: 'ZMK', EH: 'MAD', EE: 'EUR', EG: 'EGP', ZA: 'ZAR', EC: 'USD', IT: 'EUR', VN: 'VND', SB: 'SBD', ET: 'ETB', SO: 'SOS', ZW: 'ZWL', SA: 'SAR', ES: 'EUR', ER: 'ERN', ME: 'EUR', MD: 'MDL', MG: 'MGA', MF: 'EUR', MA: 'MAD', MC: 'EUR', UZ: 'UZS', MM: 'MMK', ML: 'XOF', MO: 'MOP', MN: 'MNT', MH: 'USD', MK: 'MKD', MU: 'MUR', MT: 'EUR', MW: 'MWK', MV: 'MVR', MQ: 'EUR', MP: 'USD', MS: 'XCD', MR: 'MRO', IM: 'GBP', UG: 'UGX', TZ: 'TZS', MY: 'MYR', MX: 'MXN', IL: 'ILS', FR: 'EUR', IO: 'USD', SH: 'SHP', FI: 'EUR', FJ: 'FJD', FK: 'FKP', FM: 'USD', FO: 'DKK', NI: 'NIO', NL: 'EUR', NO: 'NOK', NA: 'NAD', VU: 'VUV', NC: 'XPF', NE: 'XOF', NF: 'AUD', NG: 'NGN', NZ: 'NZD', NP: 'NPR', NR: 'AUD', NU: 'NZD', CK: 'NZD', XK: 'EUR', CI: 'XOF', CH: 'CHF', CO: 'COP', CN: 'CNY', CM: 'XAF', CL: 'CLP', CC: 'AUD', CA: 'CAD', CG: 'XAF', CF: 'XAF', CD: 'CDF', CZ: 'CZK', CY: 'EUR', CX: 'AUD', CR: 'CRC', CW: 'ANG', CV: 'CVE', CU: 'CUP', SZ: 'SZL', SY: 'SYP', SX: 'ANG', KG: 'KGS', KE: 'KES', SS: 'SSP', SR: 'SRD', KI: 'AUD', KH: 'KHR', KN: 'XCD', KM: 'KMF', ST: 'STD', SK: 'EUR', KR: 'KRW', SI: 'EUR', KP: 'KPW', KW: 'KWD', SN: 'XOF', SM: 'EUR', SL: 'SLL', SC: 'SCR', KZ: 'KZT', KY: 'KYD', SG: 'SGD', SE: 'SEK', SD: 'SDG', DO: 'DOP', DM: 'XCD', DJ: 'DJF', DK: 'DKK', VG: 'USD', DE: 'EUR', YE: 'YER', DZ: 'DZD', US: 'USD', UY: 'UYU', YT: 'EUR', UM: 'USD', LB: 'LBP', LC: 'XCD', LA: 'LAK', TV: 'AUD', TW: 'TWD', TT: 'TTD', TR: 'TRY', LK: 'LKR', LI: 'CHF', LV: 'EUR', TO: 'TOP', LT: 'LTL', LU: 'EUR', LR: 'LRD', LS: 'LSL', TH: 'THB', TF: 'EUR', TG: 'XOF', TD: 'XAF', TC: 'USD', LY: 'LYD', VA: 'EUR', VC: 'XCD', AE: 'AED', AD: 'EUR', AG: 'XCD', AF: 'AFN', AI: 'XCD', VI: 'USD', IS: 'ISK', IR: 'IRR', AM: 'AMD', AL: 'ALL', AO: 'AOA', AS: 'USD', AR: 'ARS', AU: 'AUD', AT: 'EUR', AW: 'AWG', IN: 'INR', AX: 'EUR', AZ: 'AZN', IE: 'EUR', ID: 'IDR', UA: 'UAH', QA: 'QAR', MZ: 'MZN',\n};\n","import { createStore, AnyAction } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// Action types - is just a constant. MUST have a unique value.\nconst SET_USER_CURRENCY = 'SET_USER_CURRENCY';\nconst SET_EXCHANGE_INFO = 'SET_EXCHANGE_INFO';\nconst SET_EXCHANGE_RATES = 'SET_EXCHANGE_RATES';\nconst SET_EXCHANGE_RATE = 'SET_EXCHANGE_RATE';\n\nconst initialState: RootState = {\n  userCurrencyCode: '',\n  moneyAmount: 0,\n  exchangeFrom: '',\n  exchangeTo: '',\n  exchangeRates: [],\n  exchangeRate: 0,\n};\n\n// rootReducer - this function is called after dispatching an action\nconst rootReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case SET_USER_CURRENCY:\n      return {\n        ...state,\n        userCurrencyCode: action.payload,\n      };\n\n    case SET_EXCHANGE_INFO:\n      return {\n        ...state,\n        moneyAmount: action.payload.moneyAmount,\n        exchangeFrom: action.payload.exchangeFrom,\n        exchangeTo: action.payload.exchangeTo,\n      };\n\n    case SET_EXCHANGE_RATES:\n      return {\n        ...state,\n        exchangeRates: action.payload,\n      };\n\n    case SET_EXCHANGE_RATE:\n      return {\n        ...state,\n        exchangeRate: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import { Navigation } from './Navigation';\n\nexport default Navigation;\n","import { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => (\n  <div className=\"container\">\n    <header className=\"d-flex flex-wrap justify-content-center py-3 mb-4 border-bottom\">\n      <h1 className=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto text-dark text-decoration-none\">Exchange rates</h1>\n\n      <nav className=\"nav nav-pills\">\n        <NavLink\n          to=\"/\"\n          className={({\n            isActive,\n          }) => `navbar-item is-tab nav-link ${isActive ? ' active' : ''}`}\n        >\n          Converter\n        </NavLink>\n        <NavLink\n          to=\"/exchange-rates\"\n          className={({\n            isActive,\n          }) => `navbar-item is-tab nav-link ${isActive ? ' active' : ''}`}\n        >\n          Exchange rates\n        </NavLink>\n      </nav>\n    </header>\n  </div>\n);\n","import { WrongPage } from './WrongPage';\n\nexport default WrongPage;\n","export const WrongPage = () => (\n  <div>\n    Sorry... We do not have such page :(\n  </div>\n);\n","import { Converter } from './Converter';\n\nexport default Converter;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getExchangeRatesForTwo } from '../../Api/Rates';\n\nexport const Converter = () => {\n  const [userReq, setUserReq] = useState('');\n  const [inputError, setInputError] = useState('');\n  const dispatch = useDispatch();\n  const exchangeRate = useSelector((state: RootState) => state.exchangeRate);\n  const moneyAmount = useSelector((state: RootState) => state.moneyAmount);\n  const exchangeFrom = useSelector((state: RootState) => state.exchangeFrom);\n  const exchangeTo = useSelector((state: RootState) => state.exchangeTo);\n\n  const handleUserInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUserReq(event.target.value);\n  };\n\n  const getRates = (event: React.FormEvent) => {\n    event.preventDefault();\n    const info = userReq.split(' ');\n    const regex = /\\d+\\s\\w{3}\\sto\\s\\w{3}/;\n\n    setUserReq('');\n\n    if (regex.test(userReq)) {\n      setInputError('');\n\n      dispatch({\n        type: 'SET_EXCHANGE_INFO',\n        payload: {\n          moneyAmount: +info[0],\n          exchangeFrom: info[1].toUpperCase(),\n          exchangeTo: info[3].toUpperCase(),\n        },\n      });\n    } else {\n      setInputError('Please follow this pattern: [money amount] [code] to [code]');\n    }\n\n    (async () => {\n      const rateForTwo = await getExchangeRatesForTwo(info[1], info[3]);\n\n      if (rateForTwo.result !== 'error') {\n        dispatch({ type: 'SET_EXCHANGE_RATE', payload: rateForTwo.conversion_rate });\n      } else {\n        setInputError('We got some error while loading data from server');\n      }\n    })();\n  };\n\n  const getExchangeRateMessage = () => {\n    if (exchangeRate && typeof moneyAmount === 'number') {\n      const changeAmount = Math.round(moneyAmount * exchangeRate * 100) / 100;\n      const message = `${moneyAmount} ${exchangeFrom} is equal to ${changeAmount} ${exchangeTo}`;\n\n      return (\n        <span>{message}</span>\n      );\n    }\n\n    return '';\n  };\n\n  return (\n    <form\n      onSubmit={event => getRates(event)}\n      className=\"col-md-12 text-center\"\n    >\n      <div className=\"mb-3\">\n        <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n          Please enter a sentence like &quot;100 USD to UAH&quot;\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n            value={userReq}\n            onChange={handleUserInput}\n          />\n          <div id=\"emailHelp\" className=\"form-text\">{inputError ? <span>{inputError}</span> : getExchangeRateMessage()}</div>\n        </label>\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">Get rate</button>\n    </form>\n  );\n};\n","import { Route, Routes } from 'react-router-dom';\nimport { useEffect, lazy, Suspense } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Navigation from './components/Navigation';\nimport WrongPage from './components/WrongPage';\nimport Converter from './components/Converter';\nimport { getUserLocation } from './Api/Location';\nimport { getCurrencyCode } from './Api/Rates';\n\nconst LazyExchange = lazy(() => import('./components/Exchange'));\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    (async () => {\n      const locationInfo = await getUserLocation();\n      const userCountryCode = locationInfo.countryCode;\n      const userCurrencyCode = getCurrencyCode(userCountryCode);\n\n      dispatch({ type: 'SET_USER_CURRENCY', payload: userCurrencyCode });\n    })();\n  }, []);\n\n  const getLazyExchange = () => (\n    <Suspense fallback={<div>Loading data...</div>}>\n      <LazyExchange />\n    </Suspense>\n  );\n\n  return (\n    <div className=\"d-flex flex-wrap justify-content-center py-3 mb-4\">\n      <Navigation />\n      <Routes>\n        <Route path=\"/\" element={<Converter />} />\n        <Route path=\"/exchange-rates\" element={getLazyExchange()} />\n        <Route path=\"*\" element={<WrongPage />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","const GET_LOCATION_URL = 'https://extreme-ip-lookup.com/json/?key=ShlUFaRmsfAKK67LzO49';\n\nexport const getUserLocation = (): Promise<Location> => {\n  // eslint-disable-next-line no-console\n  console.log('req to location server'); // убедимся, что нет лишних запросов\n\n  return fetch(GET_LOCATION_URL)\n    .then(responce => responce.json());\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}